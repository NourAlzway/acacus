name: Release

on:
  push:
    branches: [master, main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.repository_owner == 'NourAlzway'
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Run tests
        run: npm run test:ci

      - name: Check for changeset files
        id: check-changesets
        run: |
          if [ -n "$(find .changeset -name '*.md' -not -name 'README.md' -not -name 'config.json')" ]; then
            echo "has-changesets=true" >> $GITHUB_OUTPUT
          else
            echo "has-changesets=false" >> $GITHUB_OUTPUT
          fi

      - name: Version packages and publish
        if: steps.check-changesets.outputs.has-changesets == 'true'
        id: publish
        run: |
          # Update versions based on changesets
          npm run version-packages

          # Get the new version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

          # Commit version changes
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "chore: release package v$NEW_VERSION" || echo "No changes to commit"
          git push

          # Publish to npm
          npm run release

          echo "Published acacus@$NEW_VERSION"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: steps.check-changesets.outputs.has-changesets == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.publish.outputs.version }}
          name: Release v${{ steps.publish.outputs.version }}
          body: |
            ## Changes

            See [CHANGELOG.md](https://github.com/NourAlzway/acacus/blob/master/CHANGELOG.md) for details.

            ## Package Information

            **Package**: acacus@${{ steps.publish.outputs.version }}
            **Published**: ${{ github.event.head_commit.timestamp }}

            ---

            Install with: `npm install acacus@${{ steps.publish.outputs.version }}`
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
